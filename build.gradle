buildscript {
	ext {
		springBootVersion = '1.4.0.RELEASE'
	}
	repositories {
		mavenCentral()
		maven {
			url "https://plugins.gradle.org/m2/"
		}
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath "gradle.plugin.com.palantir.gradle.docker:gradle-docker:0.9.0"
	}
}

plugins {
	id "net.vivin.gradle-semantic-build-versioning" version "2.0.2"
}

group 'ru.nektodev'

apply plugin: 'spring-boot'
apply plugin: "com.palantir.docker"


jar {
	baseName = 'notification-service'
	version = project.version
}
docker {
	name "nektodev/notification-service"
	tags 'latest'
	dockerfile 'Dockerfile'
	dependsOn tasks.jar, tasks.bootRepackage
	pull true
}

allprojects {
	apply plugin: 'java'
	apply plugin: 'idea'

	sourceCompatibility = 1.8
	targetCompatibility = 1.8

	repositories {
		mavenCentral()
	}

	dependencies {
		compile("org.springframework.boot:spring-boot-starter-web:${springBootVersion}")
		compile("org.springframework.boot:spring-boot-starter-data-mongodb:${springBootVersion}")
		compile group: 'com.google.guava', name: 'guava', version: '11.0.2'
		testCompile('org.springframework.boot:spring-boot-starter-test')
	}
}


project.version.with {
	tagPrefix="v"
}

task releaseMajor(dependsOn: ['clean', 'bumpMajor', 'release', 'docker']) << {
	println "Release ${project.name} version: ${project.version}"
}

task releaseMinor(dependsOn: ['clean', 'bumpMinor', 'release', 'docker']) << {
	println "Release ${project.name} version: ${project.version}"
}

task releasePatch(dependsOn: ['clean', 'bumpPatch', 'release', 'docker']) << {
	println "Release ${project.name} version: ${project.version}"
}

task dockerTagAndPush << {
	dockerTag.execute()

	exec {
		commandLine "docker", "tag", "${docker.name}:latest", "${docker.name}:v${project.version}"
	}

	dockerPush.execute()
}

releasePatch.doLast {
	dockerTagAndPush.execute()
	tag.execute()
}

releaseMinor.doLast {
	dockerTagAndPush.execute()
	tag.execute()
}

releaseMajor.doLast {
	dockerTagAndPush.execute()
	tag.execute()
}